{
	"version": "2",
	"templates": [
		{
			"type": 3,
			"title": "Duplicati",
			"name": "Duplicati",
			"categories": ["Sauvegarde"],
			"description": "C'est une solution de sauvegarde gratuit pour stocker des sauvegardes cryptées en ligne ou en local.",
			"logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/duplicati-icon.png",
			"env": [
				{
					"label": "Port",
					"name": "port",
					"default": "8200"
				},
				{
					"label": "Nom du container",
					"name": "nom_container",
					"default": "duplicati"
				},
				{
					"label": "Dossier config",
					"name": "dossier_config",
					"default": "/home/docker/duplicati"
				},
				{
					"label": "Dossier backup",
					"name": "dossier_backup",
					"default": "/home/docker/duplicati"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "duplicati/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "go2rtc",
			"name": "go2rtc",
			"categories": ["test"],
			"description": "go2rtc",
			"env": [
				{
					"label": "name_container",
					"name": "name_container",
					"default": "go2rtc"
				},
				{
					"label": "folder",
					"name": "folder",
					"default": "/home/docker/go2rtc"
				},
				{
					"label": "TZ",
					"name": "TZ",
					"default": "Europe/Paris"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "go2rtc/docker-compose.yml",
				"url": "https://github.com/fredarro/template-portainer"
			}
		},
		{
			"type": 3,
			"title": "grafana",
			"name": "grafana",
			"categories": ["test"],
			"description": "grafana",
			"logo": "https://upload.wikimedia.org/wikipedia/commons/9/9d/Grafana_logo.png?20170804201233",
			"env": [
				{
					"label": "name_container",
					"name": "name_container",
					"default": "grafana"
				},
				{
					"label": "folder",
					"name": "folder",
					"default": "/home/docker/grafana"
				},
				{
					"label": "TZ",
					"name": "TZ",
					"default": "Europe/Paris"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "grafana/docker-compose.yml",
				"url": "https://github.com/fredarro/template-portainer"
			}
		},
		{
			"type": 3,
			"title": "guacamole",
			"name": "guacamole",
			"categories": ["test"],
			"description": "guacamole",
			"logo": "https://upload.wikimedia.org/wikipedia/commons/3/31/Apache_Guacamole_logo.png",
			"env": [
				{
					"label": "port",
					"name": "port",
					"default": "8080"
				},
				{
					"label": "name_container",
					"name": "name_container",
					"default": "guacamole"
				},
				{
					"label": "folder",
					"name": "folder",
					"default": "/home/docker/guacamole"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "guacamole/docker-compose.yml",
				"url": "https://github.com/fredarro/template-portainer"
			}
		},
		{
			"type": 3,
			"title": "influxdb2",
			"name": "influxdb2",
			"categories": ["test"],
			"description": "influxdb2",
			"logo": "https://www.niagaramarketplace.com/media/catalog/product/cache/f7420c7cfd302c73440e50c5a6066c3c/m/a/marketplace_icons_13_.png",
			"env": [
				{
					"label": "port",
					"name": "port",
					"default": "8086"
				},
				{
					"label": "name_container",
					"name": "name_container",
					"default": "influxdb2"
				},
				{
					"label": "folder",
					"name": "folder",
					"default": "/home/docker/influxdb2"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "influxdb2/docker-compose.yml",
				"url": "https://github.com/fredarro/template-portainer"
			}
		},
		{
			"type": 3,
			"title": "mariadb",
			"name": "mariadb",
			"categories": ["test"],
			"description": "mariadb",
			"logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/mariadb-icon.png",
			"env": [
				{
					"label": "port",
					"name": "port",
					"default": "3306"
				},
				{
					"label": "name_container",
					"name": "name_container",
					"default": "mariadb"
				},
				{
					"label": "folder",
					"name": "folder",
					"default": "/home/docker/mariadb"
				},
				{
					"label": "PUID",
					"name": "PUID",
					"default": "1000"
				},
				{
					"label": "GUID",
					"name": "GUID",
					"default": "1000"
				},
				{
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD",
					"default": "TheBestHACF"
				},
				{
					"label": "MYSQL_DATABASE",
					"name": "MYSQL_DATABASE",
					"default": "homeassistant"
				},
				{
					"label": "MYSQL_USER",
					"name": "MYSQL_USER",
					"default": "hacf"
				},
				{
					"label": "MYSQL_PASSWORD",
					"name": "MYSQL_PASSWORD",
					"default": "TheBestHACF"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "mariadb/docker-compose.yml",
				"url": "https://github.com/fredarro/template-portainer"
			}
		},
		{
			"type": 3,
			"title": "Viseron",
			"name": "Viseron",
			"categories": ["Sécurité","Vidéo"],
			"description": "Viseron est un NVR auto-hébergé, uniquement en local, implémenté en Python. L'objectif est la facilité d'utilisation tout en tirant parti de l'accélération matérielle pour une charge système minimale ",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/viseron.svg",
			"env": [
				{
					"label": "port",
					"name": "port",
					"default": "8888"
				},
				{
					"label": "name_container",
					"name": "name_container",
					"default": "viseron"
				},
				{
					"label": "dossier",
					"name": "dossier",
					"default": "/home/docker/viseron"
				},
				{
					"label": "dossier",
					"name": "dossier",
					"default": "/home/docker/viseron"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "viseron/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Pi-Hole",
			"name": "Pi-Hole",
			"categories": ["Sécurité"],
			"description": "Pi-Hole est un DNS « sinkhole », comprendre « entonnoir ». Il va utiliser les requêtes DNS faites par vos appareils pour valider ou non le trafic et ainsi vous mettre à l’abri des adresses et domaines connus comme diffusant de la pub, des malwares, etc.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/pi-hole.svg",
			"env": [
				{
					"label": "port",
					"name": "port",
					"default": "80"
				},
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "pi-hole"
				},
				{
					"label": "dossier",
					"name": "dossier",
					"default": "/home/docker/pi-hole"
				},
				{
					"label": "dossier",
					"name": "dossier",
					"default": "/home/docker/pi-hole"
				},
				{
					"label": "mot de passe",
					"name": "mot_de_passe",
					"default": null,
					"description": "Mot de passe de connexion a l'interface de Pi-hole"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "pi-hole/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Adguard",
			"name": "Adguard",
			"categories": ["Sécurité"],
			"description": "Bloque toutes sortes de publicités Élimine des élements web agaçants Économise le trafic et accélère le chargement des pages Fonctionne dans les navigateurs et les applications Conserve la fonctionnalité et l'ésthétique des sites web",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/adguard-home.svg",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "pi-hole"
				},
				{
					"label": "dossier",
					"name": "dossier",
					"default": "/home/docker/adguard"
				},
				{
					"label": "dossier",
					"name": "dossier",
					"default": "/home/docker/adguard"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "adguard/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Vaulwarden",
			"name": "Vaulwarden",
			"categories": ["Sécurité"],
			"description": "Vaultwarden est un gestionnaire de mot de passe gratuit, OpenSource et SelfHosted basé sur [Bitwarden](https://bitwarden.com/).",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/vaultwarden.svg",
			"env": [
				{
					"label": "Nom du container",
					"name": "nom_container",
					"default": "vaultwarden"
				},
				{
					"label": "Domaine",
					"name": "domaine",
					"default": "https://subdomain.yourdomain.com",
					"description": "Indiquer l'URL que vous désirer pour joindre Vaultwarden"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "8090"
				},
				{
					"label": "Token",
					"name": "token",
					"description": "Token généré grace à la commande: docker run --rm -it vaultwarden/server /vaultwarden hash"
				},
				{
					"label": "SMTP server",
					"name": "smtp_server",
					"default": "smtp.gmail.com"
				},
				{
					"label": "SMTP from",
					"name": "smtp_from",
					"default": "vaultwarden@youdomain.com"
				},
				{
					"label": "SMTP from name",
					"name": "smtp_from_name",
					"default": "Vaultwarden"
				},
				{
					"label": "SMTP Sécurité",
					"name": "smtp_Security",
					"default": "SECURITYMETHOD"
				},
				{
					"label": "SMTP Port",
					"name": "smtp_port",
					"default": "587"
				},
				{
					"label": "SMTP Username",
					"name": "smtp_username"
				},
				{
					"label": "SMTP Passsord",
					"name": "smtp_password"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/vaultwarden"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "vaultwarden/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Dozzle",
			"name": "Dozzle",
			"categories": ["Supervision"],
			"description": "Dozzle est une petite application légère avec une interface Web pour surveiller les journaux Docker.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/dozzle.svg",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "dozzle"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/dozzle/"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "dozzle/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Diun",
			"name": "Diun",
			"categories": ["Supervision"],
			"description": "DIUN (Docker Image Update Notifier) est une application CLI écrite en Go et livrée en un seul exécutable (et une image Docker) pour recevoir des notifications lorsqu'une image Docker est mise à jour sur un registre Docker.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/diun.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "diun"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/diun"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "diun/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Speedtest",
			"name": "Speedtest",
			"categories": ["Supervision"],
			"description": "SpeedTest by OpenSpeedTest ™ est un outil d'estimation des performances du réseau en HTML5 gratuit et open source écrit en Vanilla Javascript et utilise uniquement des API Web intégrées telles que XMLHttpRequest (XHR), HTML, CSS, JS et SVG.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/openspeedtest.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "speedtest"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "speedtest/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Uptime-Kuma",
			"name": "Uptime-Kuma",
			"categories": ["Supervision"],
			"description": "Uptime Kuma est un service qui permet de faire de monitoring que se soit en local ou sur internet pour vos sites. Il dispose de sonde http(s), TCP, Ping, DNS, Push et même Steam Game Server, oui oui !",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/uptime-kuma.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "uptime-kuma"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "3001"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/uptime-kuma"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "uptime-kuma/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Esphome",
			"name": "Esphome",
			"categories": ["Protocole"],
			"description": "ESPHome est un système pour contrôler votre ESP8266/ESP32 par des fichiers de configuration simples mais puissants et les contrôler à distance via des systèmes domotiques.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/esphome.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "esphome"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "6052"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/esphome"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "esphome/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Excalidraw",
			"name": "Excalidraw",
			"categories": ["Dashboard"],
			"description": "Excalidraw est une sorte de tableau blanc qui permet de tracer des diagrammes et infographies diverses en ligne et de façon collaborative. L'application est open source et le protocole est chiffré de bout en bout.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/excalidraw.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "excalidraw"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "3765"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "excalidraw/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Dashy",
			"name": "Dashy",
			"categories": ["Dashboard"],
			"description": "Dashy c’est un dashboard / page de démarrage qui s’installe sur votre serveur et qui vous permet d’organiser l’ensemble de vos services. Indispensable si vous vous autohébergez.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/dashy.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "dashy"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "4000"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/dashy"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "dashy/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Node-Red",
			"name": "Node-Red",
			"categories": ["Dashboard"],
			"description": "Conçu et construit par IBM, Node-RED est un outil de développement open-source et gratuit, basé sur une programmation visuelle, permettant de connecter des périphériques matériels, des API ou des services en ligne dans le cadre de l'Internet des objets.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/node-red.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "node-red"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "1880"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/node-red"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "node-red/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},		
		{
			"type": 3,
			"title": "Code Server/Vs Code",
			"name": "Code Server/Vs Code",
			"categories": ["Dashboard"],
			"description": "Exécutez code-server (VS code) sur n'importe quelle machine n'importe où et accédez-y dans le navigateur.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/93ab09fc0a7a0134a9274af73a572843c480163a/svg/vscode.svg",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "vs-code"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "8443"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/vs-code"
				},
				{
					"label": "Mot de passe",
					"name": "hash_password",
					"default": "indiquer_un_mot_de_passe"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "vs-code/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Homepage",
			"name": "Homepage",
			"categories": ["Dashboard"],
			"description": "Tableau de bord d'application moderne (entièrement statique, rapide), sécurisé et hautement personnalisable avec des intégrations pour plus de 25 services et des traductions pour plus de 15 langues.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/homepage.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "homepage"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "3002"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/homepage"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "homepage/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Heimdall",
			"name": "Heimdall",
			"categories": ["Dashboard"],
			"description": "Heimdall est un moyen d'organiser tous ces liens vers vos sites Web et applications Web les plus utilisés de manière simple. La simplicité est la clé de Heimdall.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/heimdall.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "heimdall"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "3003"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/heimdall"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "heimdall/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "PostgreSQL",
			"name": "PostgreSQL",
			"categories": ["Base de donnée"],
			"description": "PostgreSQL est un système de gestion de base de données relationnelle et objet (SGBDRO). C'est un outil libre disponible selon les termes d'une licence de type BSD.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/93ab09fc0a7a0134a9274af73a572843c480163a/svg/postgres.svg",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "postgresql"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "8080"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/postgresql"
				},
				{
					"label": "Nom base de donnée",
					"name": "db_name",
					"default": "Indiquer le nom de la base de donnée"
				},
				{
					"label": "Mot de passe",
					"name": "db_password",
					"default": "Infiquer le mot de passe d'accès à la base de donnée"
				},
				{
					"label": "Utilisateur",
					"name": "db_user",
					"default": "Indiquer le nom d'utilisateur de la base de donnée"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "postgresql/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Plex media server",
			"name": "Plex media server",
			"categories": ["Multimédia"],
			"description": "Plex analyse et organise vos fichiers comme par magie, les triant automatiquement et de manière intuitive dans votre bibliothèque Plex où ils sont parfaitement mis en valeur.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/93ab09fc0a7a0134a9274af73a572843c480163a/svg/plex.svg",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "plex"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "32400"
				},
				{
					"label": "Dossier config",
					"name": "dossier_config",
					"default": "/home/docker/plex"
				},
				{
					"label": "Dossier série TV",
					"name": "dossier_serie_tv",
					"default": "/home/docker/plex"
				},
				{
					"label": "Dossier films",
					"name": "dossier_films",
					"default": "/home/docker/plex"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "plex/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Zigbee2mqtt (Z2M)",
			"name": "Zigbee2mqtt (Z2M)",
			"categories": ["Protocole"],
			"description": "Zigbee2MQTT, c’est un concept vraiment très intéressant. Il s’agit d’un **serveur passerelle** pour votre **protocole Zigbee**. En d’autres termes, **un serveur Zigbee2MQTT** va collecter les données de vos périphériques à l’aide d’un **sniffer Zigbee**",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/93ab09fc0a7a0134a9274af73a572843c480163a/svg/zigbee2mqtt.svg",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "z2m"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "8081"
				},
				{
					"label": "Dossier persistant",
					"name": "dossier",
					"default": "/home/docker/z2m"
				},
				{
					"label": "Device",
					"name": "device",
					"default": "/dev/ttyACM0"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "zigbee2mqtt/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Mosquitto",
			"name": "Mosquitto",
			"categories": ["Protocole"],
			"description": "Mosquitto est le broker le plus souvent utilisé pour les projets ESP8266 (Arduino et Raspberry). Lancé en 2008, il est disponible sur toutes les plateformes (MacOS, Windows XP-10, Linux).",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/eclipse-mosquitto.png",
			"env": [
				{
					"label": "nom container",
					"name": "nom_container",
					"default": "mosquitto"
				},
				{
					"label": "Port",
					"name": "port",
					"default": "1883"
				},
				{
					"label": "Websocket",
					"name": "websocket",
					"default": "9091"
				},
				{
					"label": "Dossier config",
					"name": "dossier_config",
					"default": "/home/docker/mosquitto"
				},
				{
					"label": "Dossier data",
					"name": "dossier_data",
					"default": "/home/docker/mosquitto"
				},
				{
					"label": "Dossier log",
					"name": "dossier_log",
					"default": "/home/docker/mosquitto"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "mosquitto/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Emqx",
			"name": "Emqx",
			"categories": ["Protocole"],
			"description": "EMQX est un éditeur de logiciels d'infrastructure de données IdO open source et évolutifs qui propose l'une des plateformes de messagerie MQTT (EMQX) avec base de données de streaming les plus évolutives et les plus fiables au monde pour les scénarios IoT critiques.",
			"logo": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/emqx.png",
			"env": [
				{
					"label": "Nom du container",
					"name": "nom_container",
					"default": "emqx"
				},
				{
					"label": "Port d'écoute",
					"name": "port_listener",
					"default": "1883"
				},
				{
					"label": "Port d'écoute securisé",
					"name": "port_listener_ssl",
					"default": "8883"
				},
				{
					"label": "Port websocket",
					"name": "port_listener_websocket",
					"default": "8083"
				},
				{
					"label": "Port websocket securisé",
					"name": "port_listener_websocket_secure",
					"default": "8084"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "emqx/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		},
		{
			"type": 3,
			"title": "Zoraxy",
			"name": "Zoraxy",
			"categories": ["Sécurité"],
			"description": "Zoraxy est un reverse proxy Web ecrit en Go, plusieur outils sont disponible, génération des certificat avec let's encrypt, ZeroSSL etc... Uptime kuma, console Web ssh tunnel et bien d'autre. A utiliser absolumenet !",
			"logo": "https://zoraxy.arozos.com/img/icon.png",
			"env": [
				{
					"label": "Nom du container",
					"name": "nom_container",
					"default": "zoraxy"
				},
				{
					"label": "Port HTTP",
					"name": "port_http",
					"default": "80"
				},
				{
					"label": "Port HTTPS",
					"name": "port_https",
					"default": "443"
				},
				{
					"label": "Port d'administration",
					"name": "port_admin",
					"default": "8000"
				}
			],
			"platform": "linux",
			"repository": {
				"stackfile": "zoraxy/docker-compose.yml",
				"url": "https://github.com/barto95100/portainer"
			}
		}
	]
}
